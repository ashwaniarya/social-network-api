{"version":3,"sources":["component/cardcontainer/index.js","container/home/index.js","service.js","container/create/index.js","container/login/index.js","container/createCategory/index.js","init.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["MODIFY_CATEGORY","gql","_templateObject","Layout","styled","div","_templateObject2","props","orentation","css","_templateObject3","_templateObject4","CardContainer","onClickUp","onClickDown","renderWallpapers","wallpapers","map","wallpaper","react_default","a","createElement","key","_id","style","margin","src","url","width","borderRadius","_this2","this","padding","marginBottom","marginTop","react_apollo_esm","mutation","refetchQueries","query","GET_WALLPAPER_BY_CATEGORY","modifyCategory","_ref","loading","data","error","justifyContent","title","fontSize","fontStyle","subTitle","react_onsenui","modifier","onClick","variables","priority","icon","overflowX","Component","defaultProps","home_templateObject","Home","state","fabList","renderSections","categories","category","cardcontainer","console","log","message","renderToolbar","className","localStorage","removeItem","history","push","setState","animation","isOpen","color","position","bottom","right","size","fixedWidth","verticalAlign","config","bucketName","dirName","region","accessKeyId","secretAccessKey","GET__CATEGORIES","create_templateObject","ADD_WALLPAPER","create_templateObject2","Create","premium","categoryListModal","file","uploadImage","S3FileUpload","uploadFile","_this","then","item","modifiedData","location","catch","err","onClickAddCategory","row","Object","objectSpread","defineProperty","removeCategory","id","renderCategory","dataSource","renderHeader","renderRow","idx","height","length","onClickAddWallpaper","isEmpty","alert","goBack","updatedCategory","filter","type","onChange","e","target","value","files","extention","name","split","preventDefault","multiple","float","event","placeholder","display","flexWrap","values","border","backgroundColor","default","material","checked","onCompleted","addWallpaper","_ref2","LOGIN","login_templateObject","Login","token","onClickLogin","login","setItem","onError","alignItems","GET_CATEGORIES","createCategory_templateObject","ADD_CATEGORY","createCategory_templateObject2","CreateCategory","parent","onClickAdd","parseInt","addCategory","Init","getItem","react_router","path","component","CreateComponent","bounce","val","spring","stiffness","damping","client","ApolloClient","uri","request","_request","asyncToGenerator","regenerator_default","mark","_callee","operation","wrap","_context","prev","next","setContext","headers","authorization","concat","stop","_x","apply","arguments","bounceTransition","atEnter","opacity","scale","atLeave","atActive","App","react_router_dom","es","React","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.570e73de.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { \r\n  Button, \r\n  Icon, \r\n  Card\r\n} from 'react-onsenui';\r\n// Webpack CSS import\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\n// Apollo imports\r\nimport { Mutation } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport { GET_WALLPAPER_BY_CATEGORY } from './../../container/home'\r\n\r\nimport styled,{css} from 'styled-components'\r\n\r\nconst MODIFY_CATEGORY = gql`\r\n  mutation($_id:ID!,$title:String,$subTitle:String,$parent:ID,$priority:Int){\r\n    modifyCategory(_id:$_id,title:$title,subTitle:$subTitle,parent:$parent,priority:$priority){\r\n      title\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst Layout = styled.div`\r\n  display:flex;\r\n  ${props=>{\r\n   if(props.orentation === 'Horizontal'){\r\n    return css`\r\n      flex-direction:row;\r\n    `\r\n   } \r\n\r\n   if(props.orentation === 'Vertical'){\r\n    return css`\r\n      flex-direction:column;\r\n    `\r\n   }\r\n  }}\r\n`\r\n\r\nclass CardContainer extends Component {\r\n\r\n  onClickUp = () => {\r\n\r\n  }\r\n\r\n  onClickDown = () => {\r\n\r\n  }  \r\n  renderWallpapers = (wallpapers) => {\r\n    return wallpapers.map(wallpaper=>{\r\n      return (<Layout orentation='Horizontal' key={wallpaper._id} style={{margin:10}}>\r\n        <img src={wallpaper.url} style={{width:100,borderRadius:5}}/>\r\n      </Layout>)\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout orentation='Vertical' style={{padding:'0px 10px',marginBottom:20, marginTop: 10}}>\r\n        <Mutation mutation={MODIFY_CATEGORY} refetchQueries={[{query:GET_WALLPAPER_BY_CATEGORY}]}>\r\n          {(modifyCategory,{ loading, data, error})=>{\r\n            return (<Layout orentation=\"Horizontal\" style={{justifyContent:'space-between'}}>\r\n            <Layout orentation='Vertical'>\r\n              <div>\r\n                {this.props.title}\r\n              </div>\r\n              <div style={{fontSize:12, fontStyle: 'italic'}}>\r\n                {this.props.subTitle}\r\n              </div>\r\n            </Layout>\r\n            <Layout orentation='Horizontal'>\r\n              <Button modifier=\"quiet\" onClick={()=>{\r\n                modifyCategory({variables:{_id:this.props._id,priority:this.props.priority+1}})\r\n              }}><Icon icon=\"angle-up\"/></Button>\r\n              <span style={{ padding: '10px 4px'}}>{this.props.priority}</span>\r\n              <Button modifier=\"quiet\" onClick={()=>{\r\n                modifyCategory({variables:{_id:this.props._id,priority:this.props.priority-1}})\r\n              }}><Icon icon=\"angle-down\"/></Button>\r\n            </Layout>\r\n          </Layout>)\r\n          }}\r\n        </Mutation>\r\n        \r\n        \r\n        \r\n        <Layout orentation='Horizontal' style={{overflowX:'scroll'}}>\r\n          {this.renderWallpapers(this.props.wallpapers)}\r\n        </Layout>\r\n      </Layout>\r\n      \r\n    );\r\n  }\r\n}\r\nCardContainer.defaultProps = {\r\n  orentation:'Horizontal',\r\n  title:'Unamed',\r\n  subTitle:'Uname Subtitle',\r\n  priority:1,\r\n  _id:'',\r\n  wallpapers:[]\r\n  \r\n}\r\nexport default CardContainer;","import React, { Component,Fragment } from 'react';\r\nimport { \r\n  Page, \r\n  Toolbar, \r\n  Button, \r\n  BackButton, \r\n  ToolbarButton, \r\n  Icon, \r\n  Card,\r\n  Fab,\r\n  Modal\r\n} from 'react-onsenui';\r\n\r\n//local imports\r\nimport CardContiner from './../../component/cardcontainer'\r\n\r\n// Webpack CSS import\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\n\r\n// Apollo imports\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nexport const GET_WALLPAPER_BY_CATEGORY = gql`\r\nquery{\r\n  categories{\r\n    _id,\r\n    title,\r\n    subTitle,\r\n    priority,\r\n    wallpaper{\r\n      title,\r\n      url,\r\n      _id,\r\n      download,\r\n      premium\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    fabList:false\r\n  }\r\n\r\n\r\n  renderSections = (categories) => {\r\n    return categories.map(category=>{\r\n      return (<CardContiner \r\n        key={category._id} \r\n        title={category.title} \r\n        subTitle={category.subTitle} \r\n        _id={category._id} \r\n        priority={category.priority} \r\n        wallpapers={category.wallpaper}/>)\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <Query query={GET_WALLPAPER_BY_CATEGORY}>\r\n        {({loading,data,error})=>{\r\n          console.log(data)\r\n          if(loading) return <div>Loading</div>\r\n          if(error) return <div>{error.message}</div>\r\n          return (<Page \r\n            renderToolbar={() =>\r\n            <Toolbar>\r\n              <div className=\"left\">\r\n                <ToolbarButton>\r\n                  <Icon icon=\"md-menu\" />\r\n                </ToolbarButton>\r\n              </div>\r\n              <div className=\"center\">\r\n                Home\r\n              </div>\r\n              <div className=\"right\">\r\n                <ToolbarButton onClick={()=>{\r\n                  localStorage.removeItem('token')\r\n                  this.props.history.push('/login')\r\n                }}>\r\n                    <Icon icon=\"sign-out\" />\r\n                  </ToolbarButton>\r\n              </div>\r\n            </Toolbar>\r\n            }\r\n    \r\n          > \r\n            <Modal \r\n              onClick={()=>{\r\n                this.setState({fabList:false})\r\n              }}\r\n              animation=\"fade\"\r\n              isOpen={this.state.fabList}>\r\n              <div>\r\n              <Button\r\n                style={{\r\n                  color:\"#fff\"\r\n                }}\r\n                onClick={()=>{\r\n                  this.props.history.push('/createCategory')\r\n                }}\r\n                modifier=\"large--quiet\">\r\n                Add Category\r\n              </Button>\r\n              <Button\r\n                style={{\r\n                  color:\"#fff\"\r\n                }}\r\n                onClick={()=>{\r\n                  this.props.history.push('/create')\r\n                }}\r\n                modifier=\"large--quiet\">\r\n                Add Wallpaper\r\n              </Button>\r\n              </div>\r\n            </Modal>\r\n            <Fab style={{position:'fixed',bottom:20,right:20}} onClick={()=>{\r\n               this.setState({fabList:true})\r\n            }}>\r\n              <Icon icon='fa-plus' size={26} fixedWidth={false} style={{verticalAlign: 'middle'}} />\r\n            </Fab>\r\n            <div>\r\n              {this.renderSections(data.categories)}\r\n            </div>\r\n          </Page>)\r\n        }}\r\n      </Query>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","export const config = {\r\n  bucketName: 'backtickapp',\r\n  dirName: 'pixelperfect',\r\n  region: 'ap-south-1',\r\n  accessKeyId: 'AKIAIISG4BYPSE3Z2GSQ',\r\n  secretAccessKey: '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',\r\n}","import React, { Component } from 'react';\r\nimport S3FileUpload from 'react-s3'\r\nimport { Page, Toolbar, Button, BackButton, ToolbarButton, Icon, Input, Checkbox, List, ListItem, Modal } from 'react-onsenui';\r\nimport { mapKeys, values, map, isEmpty } from 'lodash'\r\nimport { config } from \"./../../service\";\r\n// Webpack CSS import\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\n\r\n// Apollo imports\r\nimport { Query, Mutation } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport { GET_WALLPAPER_BY_CATEGORY } from './../home'\r\n\r\nconst GET__CATEGORIES = gql`\r\nquery{\r\n  categories{\r\n    _id,\r\n    title\r\n  }\r\n}\r\n`\r\nconst ADD_WALLPAPER = gql`\r\nmutation($title:String!,$url:String!,$category:[ID!],$premium:Boolean){\r\n  addWallpaper(title:$title,url:$url,category:$category,premium:$premium){\r\n    title\r\n  }\r\n}\r\n`\r\n\r\nclass Create extends Component {\r\n  state = {\r\n    title:'',\r\n    premium:false,\r\n    category:{},\r\n    categoryListModal:false,\r\n    url:null,\r\n    file:null\r\n  }\r\n\r\n  uploadImage = (mutation) => {\r\n    \r\n    S3FileUpload\r\n      .uploadFile(this.state.file, config)\r\n      .then( data =>{\r\n        console.log(data)\r\n        let category = []\r\n        map(this.state.category,item => {\r\n          category.push(item._id)\r\n        })\r\n\r\n        let modifiedData = {\r\n          url:data.location,\r\n          title:this.state.title,\r\n          premium:this.state.premium,\r\n          category\r\n        }\r\n        mutation({variables:modifiedData})\r\n      })\r\n      .catch( err => console.log(err) )\r\n    \r\n  }\r\n  onClickAddCategory = (row) => {\r\n    this.setState({category:{...this.state.category,[row._id]:row}})\r\n  }\r\n\r\n  removeCategory = (id) => {\r\n    let category = this.state.category\r\n    delete category[id]\r\n    this.setState({category})\r\n  }\r\n\r\n  renderCategory = (categories) => {\r\n      return (<List\r\n        dataSource={categories}\r\n        renderHeader={this.renderHeader}\r\n        renderRow={(row, idx) => (\r\n          <ListItem\r\n            key={row._id}\r\n            style={{height:40}}\r\n            onClick={()=>{\r\n              this.onClickAddCategory(row)\r\n            }} \r\n            modifier={idx === this.state.category.length - 1 ? 'longdivider' : null}>\r\n          {row.title}\r\n          \r\n      </ListItem>\r\n      )}\r\n      />)\r\n    \r\n  }\r\n  componentDidUpdate(){\r\n  }\r\n\r\n  onClickAddWallpaper = (mutation) => {\r\n    if(this.state.file === null){\r\n      alert('Please select the image')\r\n      return\r\n    }\r\n    if(this.state.title === ''){\r\n      alert(\"Title can't be empty\")\r\n      return\r\n    }\r\n    if(isEmpty(this.state.category)){\r\n      alert('Please select at least one category')\r\n      return\r\n    }\r\n    this.uploadImage(mutation)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page renderToolbar={() =>\r\n        <Toolbar>\r\n          <div className=\"left\">\r\n            <BackButton onClick={()=>{\r\n              this.props.history.goBack()\r\n            }}>\r\n                Back\r\n            </BackButton>\r\n          </div>\r\n          <div className=\"center\">\r\n            Create\r\n          </div>\r\n        </Toolbar> }\r\n      > \r\n      {/* Category List */}\r\n      <Modal \r\n        onClick={()=>{\r\n          this.setState({categoryListModal:false})\r\n        }}\r\n        animation=\"lift\"\r\n        isOpen={this.state.categoryListModal}>\r\n        <Query query={GET__CATEGORIES}>\r\n          {({loading,data,error})=>{\r\n            if(loading) return <div>Loading ...</div>\r\n            if(data){\r\n              //let updatedCategory = mapKeys(data.categories,category=>[category._id] )\r\n              let updatedCategory = data.categories.filter(item=>{\r\n\r\n                if(this.state.category[item._id]) return false\r\n                else return true\r\n              })\r\n              return <div>{this.renderCategory(updatedCategory)}</div>\r\n            }\r\n          }}\r\n        </Query>\r\n      </Modal>\r\n        <div style={{padding:10}}>\r\n          <div>\r\n            <input type='file' id='multi' onChange={(e)=>{\r\n              console.log(e.target.value)\r\n              if(e.target.files[0]){\r\n                let extention = e.target.files[0].name.split(\".\")\r\n                extention = extention[extention.length - 1]\r\n                if(extention === 'jpg' || extention === 'jpeg' || extention === 'png'){\r\n                  this.setState({file:e.target.files[0]})\r\n                }\r\n                else{\r\n                  e.preventDefault()\r\n                  alert('Only jpg, jpeg, png is allowed')\r\n                }\r\n              }\r\n              \r\n              \r\n            }} multiple />\r\n          </div>\r\n          <div>\r\n            <div style={{padding: '10px 0px',marginTop:20}}>\r\n              <Input\r\n                style={{width: '100%'}}\r\n                value={this.state.title} float\r\n                onChange={(event) => { \r\n                  this.setState({title: event.target.value})\r\n                }}\r\n                modifier='material'\r\n                placeholder='Wallpaper Title' />\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <div>\r\n                  <List\r\n                    style={{display:'flex', flexWrap: 'wrap'}}\r\n                    dataSource={values(this.state.category)}\r\n                    renderHeader={this.renderHeader}\r\n                    renderRow={(row, idx) => (\r\n                      <div\r\n                        key={row._id}\r\n                        style={{    \r\n                          borderRadius: 5,\r\n                          padding: 5,\r\n                          fontSize: 12,\r\n                          margin:5,\r\n                          border: '1px solid rgb(55, 146, 189)',\r\n                          backgroundColor: '#dae7ff'\r\n                        }}\r\n                       >\r\n                      {row.title}\r\n                      <Button\r\n                        onClick={()=>{\r\n                          this.removeCategory(row._id)\r\n                        }}\r\n                        style={{\r\n                          backgroundColor:'transparent',\r\n                          padding:'0px 10px',\r\n                          color:\"#000\"\r\n                        }}\r\n                      >\r\n                      <Icon icon={{default: 'times-circle', material: 'times-circle'}}/>\r\n                    </Button>\r\n                  </div>\r\n                  )}\r\n                  />\r\n                </div>\r\n                <div style={{padding: '10px 0px'}}>\r\n                  <Button \r\n                    onClick={()=>{\r\n                      this.setState({categoryListModal:true})\r\n                    }}\r\n                    modifier=\"large--quiet\">\r\n                    Add Category\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              </div>\r\n            <div>\r\n              <Checkbox\r\n                onChange={event => { this.setState({premium: event.target.checked})} }\r\n                modifier='material' />\r\n                <span> Premium </span>\r\n            </div>\r\n            \r\n            <div style={{padding: '10px 0px'}}>\r\n              <Mutation \r\n                mutation={ADD_WALLPAPER}\r\n                onCompleted={(data)=>{\r\n                  console.log(\"Done\",data)\r\n                  this.props.history.goBack()\r\n                }}\r\n                refetchQueries={[{query:GET_WALLPAPER_BY_CATEGORY}]}\r\n                >\r\n                {(addWallpaper,{ loading, data, error}) => {\r\n                  if(loading) return <div>loading ...</div>\r\n                  return (<Button \r\n                    onClick={()=>{\r\n                      this.onClickAddWallpaper(addWallpaper)\r\n                    }}\r\n                    modifier=\"material\">\r\n                    Add\r\n                  </Button>)\r\n                }}\r\n              </Mutation>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport { \r\n  Page, \r\n  Input,\r\n  Button,\r\n  \r\n} from 'react-onsenui';\r\n\r\n// Webpack CSS import\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\n// Apollo imports\r\nimport { Mutation } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nconst LOGIN = gql`\r\nmutation($token:String!){\r\n  login(token:$token)\r\n}`\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    token:''\r\n  }\r\n  onClickLogin = (mutation) => {\r\n    if(this.state.token === ''){\r\n      alert('Token cannot be empty')\r\n      return\r\n\r\n    }\r\n    mutation({variables:{\r\n      token:this.state.token\r\n    }})\r\n  }\r\n  render() {\r\n    return (\r\n      <Mutation mutation={LOGIN}\r\n        onCompleted={(data)=>{\r\n          if(data.login){\r\n            localStorage.setItem('token',this.state.token)\r\n            this.props.history.push('/home')\r\n          }\r\n        }}\r\n        onError={(error)=>{\r\n          alert(error.message)\r\n        }}\r\n      >\r\n        {(login,{loading, data, error})=>{\r\n          \r\n          return (<Page> \r\n            <div style={{height:'100vh',display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n              <div style={{}}>\r\n                <div style={{marginBottom:20}}>\r\n                  <Input\r\n                    value={this.state.token} float\r\n                    onChange={(event) => { this.setState({token: event.target.value})} }\r\n                    modifier='material'\r\n                    placeholder='Token' />\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    onClick={()=>{\r\n                      this.onClickLogin(login)\r\n                    }}\r\n                    modifier=\"large--cta\">\r\n                    LOGIN\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n          </Page>)\r\n        }}\r\n      </Mutation>\r\n      \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Page, Toolbar, Button, BackButton, ToolbarButton, Icon, Input, Checkbox, List, ListItem, Modal } from 'react-onsenui';\r\n\r\n// Webpack CSS import\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\n// Apollo imports\r\nimport { Query, Mutation } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport { GET_WALLPAPER_BY_CATEGORY } from './../home'\r\n\r\nconst GET_CATEGORIES = gql`\r\nquery{\r\n  categories{\r\n    _id,\r\n    title\r\n  }\r\n}\r\n`\r\n\r\nconst ADD_CATEGORY = gql`\r\n  mutation($title:String!,$subTitle:String!,$parent:ID,$priority:Int){\r\n    addCategory(title:$title,subTitle:$subTitle,parent:$parent,priority:$priority){\r\n      title\r\n    }\r\n  }\r\n`\r\n\r\nclass CreateCategory extends Component {\r\n  state = {\r\n    title:'',\r\n    subTitle:'',\r\n    parent:null,\r\n    priority:1,\r\n    categoryListModal:false\r\n  }\r\n\r\n  renderCategory = (categories) => {\r\n    return (<List\r\n      dataSource={categories}\r\n      renderHeader={this.renderHeader}\r\n      renderRow={(row, idx) => (\r\n        <ListItem\r\n          key={row._id}\r\n          style={{height:40}}\r\n          onClick={()=>{\r\n            this.onClickAddCategory(row)\r\n          }} \r\n          //modifier={idx === this.state.parent.length - 1 ? 'longdivider' : null}\r\n          >\r\n        {row.title}\r\n        \r\n    </ListItem>\r\n    )}\r\n    />)\r\n  \r\n  }\r\n\r\n  onClickAddCategory = (row) => {\r\n    this.setState({parent:row})\r\n  }\r\n  // call this function when add is clicked\r\n  onClickAdd = (mutation) =>{\r\n    if(this.state.title === ''){\r\n      alert(\"Title can't be empty\")\r\n      return\r\n    }\r\n    if(this.state.subTitle === ''){\r\n      alert(\"SubTitle can't be empty\")\r\n      return\r\n    }\r\n    if(this.state.priority === ''){\r\n      alert(\"Priority can't be empty\")\r\n      return\r\n    }\r\n    let data = {\r\n      title:this.state.title,\r\n      subTitle:this.state.subTitle,\r\n      priority:this.state.priority,\r\n      parent:this.state.parent?this.state.parent._id:null\r\n    }\r\n    mutation({variables:data})\r\n  }\r\n  render() {\r\n    return (\r\n      <Page renderToolbar={() =>\r\n        <Toolbar>\r\n          <div className=\"left\">\r\n            <BackButton onClick={()=>{\r\n              this.props.history.goBack()\r\n            }}>\r\n                Back\r\n            </BackButton>\r\n          </div>\r\n          <div className=\"center\">\r\n            Create Category\r\n          </div>\r\n        </Toolbar> }\r\n      > \r\n      {/* Category list */}\r\n      <Modal \r\n        onClick={()=>{\r\n          this.setState({categoryListModal:false})\r\n        }}\r\n        animation=\"lift\"\r\n        isOpen={this.state.categoryListModal}>\r\n        <Query query={GET_CATEGORIES}>\r\n          {({loading,data,error})=>{\r\n            if(loading) return <div>Loading ...</div>\r\n            if(data){\r\n              //let updatedCategory = mapKeys(data.categories,category=>[category._id] )\r\n              let updatedCategory = data.categories.filter(item=>{\r\n                if(this.state.parent){\r\n                  if(this.state.parent && this.state.parent._id === item._id) return false\r\n                   return true\r\n                }\r\n                else return true\r\n                \r\n              })\r\n              return <div>{this.renderCategory(updatedCategory)}</div>\r\n            }\r\n          }}\r\n        </Query>\r\n      </Modal>\r\n        <div style={{padding:20}}>\r\n          <div style={{padding: '10px 0px'}}>\r\n            <Input\r\n              style={{width: '100%'}}\r\n              value={this.state.title} float\r\n              onChange={(event) => { \r\n                this.setState({title: event.target.value})\r\n              }}\r\n              modifier='material'\r\n              placeholder='Category title' />\r\n          </div>\r\n          <div style={{padding: '10px 0px'}}>\r\n            <Input\r\n              style={{width: '100%'}}\r\n              value={this.state.subTitle} float\r\n              onChange={(event) => { \r\n                this.setState({subTitle: event.target.value})\r\n              }}\r\n              modifier='material'\r\n              placeholder='Category Sub title' />\r\n          </div>\r\n          <div style={{padding: '10px 0px'}}>\r\n            <Input\r\n              style={{width: '100%'}}\r\n              type=\"tel\"\r\n              value={this.state.priority} float\r\n              onChange={(event) => { \r\n                if(event.target.value)\r\n                  this.setState({priority: parseInt(event.target.value)})\r\n                else{\r\n                  this.setState({priority: ''})\r\n                }\r\n              }}\r\n              modifier='material'\r\n              placeholder='Priority' />\r\n          </div>\r\n          <div style={{padding: '10px 0px'}}>\r\n            <span>Parent Category: </span>\r\n            <span>{this.state.parent?this.state.parent.title:'null'}</span>\r\n            \r\n            {this.state.parent && <span><Button\r\n                onClick={()=>{\r\n                  this.setState({parent:null})\r\n                }}\r\n                style={{\r\n                  backgroundColor:'transparent',\r\n                  padding:'0px 10px',\r\n                  color:\"#000\"\r\n                }}\r\n              >\r\n                <Icon icon={{default: 'times-circle', material: 'times-circle'}}/>\r\n              </Button>\r\n            </span>}\r\n          </div>\r\n          <div style={{padding: '10px 0px'}}>\r\n            <Button \r\n              onClick={()=>{\r\n                this.setState({categoryListModal:true})\r\n              }}\r\n              modifier=\"large--quiet\">\r\n              Add Parent Category\r\n            </Button>\r\n          </div>\r\n          <div style={{padding: '10px 0px'}}>\r\n              <Mutation \r\n                mutation={ADD_CATEGORY}\r\n                onCompleted={(data)=>{\r\n                  console.log(\"Done\",data)\r\n                  this.props.history.goBack()\r\n                }}\r\n                refetchQueries={[{query:GET_WALLPAPER_BY_CATEGORY}]}\r\n                >\r\n                {(addCategory,{ loading, data, error}) => {\r\n                  if(loading) return <div>loading ...</div>\r\n                  return (<Button \r\n                    onClick={()=>{\r\n                      this.onClickAdd(addCategory)\r\n                    }}\r\n                    modifier=\"material\">\r\n                    Add\r\n                  </Button>)\r\n                }}\r\n              </Mutation>\r\n              \r\n            </div>\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateCategory;","import React, { Component } from 'react';\r\nimport { Route,Switch } from \"react-router-dom\";\r\n\r\n//local component\r\nimport Home from './container/home'\r\nimport Create from './container/create'\r\nimport Login from './container/login'\r\nimport CreateComponent from './container/createCategory'\r\n\r\nclass Init extends Component {\r\n  componentDidMount(){\r\n    const token = localStorage.getItem('token',null)\r\n    if(!token) this.props.history.push('/login')\r\n  }\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/home\" component={Home}/>   \r\n        <Route path=\"/login\" component={Login}/>        \r\n        <Route path=\"/create\" component={Create}/>  \r\n        <Route path=\"/createCategory\" component={CreateComponent} />      \r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Init;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route,Switch } from \"react-router-dom\";\nimport { AnimatedSwitch,spring } from 'react-router-transition';\nimport Init from './init'\n\n\n// Apollo imports\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\n//const uri = 'http://localhost:4000/graph/'\nconst uri = 'https://pixelperfect.backtick.in/graph/'\n\n// wrap the `spring` helper to use a bouncy config\nfunction bounce(val) {\n  return spring(val, {\n    stiffness: 330,\n    damping: 22,\n  });\n}\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ \n  uri: uri,\n  request: async (operation) => {\n    const token = localStorage.getItem('token',null)\n    operation.setContext({\n      headers: {\n        authorization:token?`Bearer ${token}`:null\n      }\n    })\n  },\n});\n\n// child matches will...\nconst bounceTransition = {\n  // start in a transparent, upscaled state\n  atEnter: {\n    opacity: 0,\n    scale: 1.2,\n  },\n  // leave in a transparent, downscaled state\n  atLeave: {\n    opacity: bounce(0),\n    scale: bounce(0.8),\n  },\n  // and rest at an opaque, normally-scaled state\n  atActive: {\n    opacity: bounce(1),\n    scale: bounce(1),\n  },\n};\nclass App extends React.Component{\n  render(){\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n            <AnimatedSwitch\n              atEnter={bounceTransition.atEnter}\n              atLeave={bounceTransition.atLeave}\n              atActive={bounceTransition.atActive}\n              className=\"switch-wrapper\"\n            >\n              <Route path=\"/\" component={Init}/>\n            </AnimatedSwitch>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      console.log(swUrl)\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}